# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    ## Captura de eventos del log extendido.
    general.entity.listener:
        class: App\Controller\Estructura\GeneralEntityListener
        tags:
        - { name: doctrine.event_listener, event: postFlush }
        arguments: ['@service_container']

    App\Controller\Estructura\EntityListener:
        tags:
        - { name: doctrine.orm.entity_listener, lazy: true}
        arguments: ['@doctrine.orm.entity_manager']

    ## Servicio para manejador de excepciones dentro del sistema.
    general.handler.exception:
      class: App\Controller\Estructura\ExceptionHandler
      tags:
      - {name: kernel.event_listener, event: kernel.exception, method: getException}
      arguments: ['@service_container','@doctrine.orm.entity_manager','@security.token_storage']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
